{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import math as math\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def generateData(n1, n2):\n",
    "    theta = np.random.uniform(0, 2*math.pi, n1 + n2)\n",
    "    r = np.hstack((np.random.normal(0,0.2,n1),np.random.normal(1,0.2,n2)))\n",
    "    temrcos = []\n",
    "    temrsin = []\n",
    "    for i in range(n1 + n2):\n",
    "        temrcos.append(r[i]*math.cos(theta[i]))\n",
    "        temrsin.append(r[i]*math.sin(theta[i]))\n",
    "    y = np.hstack((np.repeat([0],n1),np.repeat([1],n2)))\n",
    "    return({\"x1\":temrcos,\"x2\":temrsin,\"y\":y})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ -8.64805356e-02,  -8.86138976e-02],\n       [ -1.34221852e-01,   9.35065970e-02],\n       [ -5.67644462e-02,   1.67682432e-02],\n       [  5.55236973e-02,  -6.36285469e-02],\n       [  1.10726595e-01,  -6.02510087e-02],\n       [ -6.38176920e-03,   1.75175555e-02],\n       [  8.35684910e-02,  -2.06509039e-01],\n       [ -3.03385733e-03,  -4.99887392e-03],\n       [  6.34218752e-02,   5.66931032e-02],\n       [ -4.01528440e-02,  -3.42306979e-02],\n       [ -1.83895405e-03,   7.33173862e-02],\n       [  1.17496923e-01,   2.12922603e-01],\n       [  1.36560157e-01,   3.00678521e-01],\n       [ -1.14985064e-01,  -8.78982320e-02],\n       [ -3.35785039e-02,  -6.12852015e-02],\n       [  6.56300932e-02,   1.35853156e-01],\n       [  2.19681859e-01,  -3.76171209e-02],\n       [  1.86991785e-02,  -3.23024303e-01],\n       [  5.20956293e-02,   3.99515778e-01],\n       [ -3.45351905e-01,   9.91587266e-02],\n       [  3.80848981e-02,  -9.46959034e-02],\n       [ -6.67720065e-02,   2.68783011e-02],\n       [  1.03694648e-01,  -8.78530964e-02],\n       [  1.83704570e-02,  -8.86921883e-02],\n       [ -3.23294736e-02,  -4.07491364e-02],\n       [  1.67082474e-01,  -3.39606330e-02],\n       [  2.29802594e-01,  -8.13424140e-02],\n       [ -1.70986578e-02,  -1.06398948e-01],\n       [ -5.30929938e-02,  -3.48583646e-02],\n       [  8.66519436e-02,   5.19937836e-02],\n       [  8.98131728e-02,  -1.01156428e-01],\n       [ -9.98550467e-03,  -5.13103232e-02],\n       [  1.52035188e-02,  -1.32915586e-01],\n       [  5.28571129e-01,  -5.57660088e-02],\n       [ -7.14194849e-02,   3.88976336e-01],\n       [  1.57547057e-01,   3.14613022e-02],\n       [  1.22305774e-03,   2.36649029e-02],\n       [  2.46788085e-01,  -1.39934927e-01],\n       [ -1.96354836e-01,  -3.94856930e-02],\n       [  5.02648652e-02,  -2.68802755e-02],\n       [  4.74431179e-02,  -1.20880278e-02],\n       [ -1.49387881e-01,   2.09868476e-01],\n       [  2.02835277e-01,   9.85718966e-02],\n       [ -4.45413627e-02,   9.91955325e-02],\n       [ -2.40639597e-01,   3.86333704e-01],\n       [ -1.96997978e-04,   1.62800357e-01],\n       [  7.04575256e-02,   9.92552862e-02],\n       [  9.55689028e-02,  -1.63714081e-01],\n       [ -2.89616268e-02,  -7.75070116e-02],\n       [  3.96635868e-02,  -2.27393489e-02],\n       [ -9.95383859e-02,  -1.00289904e-01],\n       [  2.92835534e-02,  -2.06097141e-02],\n       [ -5.80183491e-02,  -4.66987118e-02],\n       [  2.02739075e-01,  -1.26478329e-01],\n       [ -4.06529231e-04,  -8.99614883e-04],\n       [  8.96170922e-03,   1.01975448e-01],\n       [  2.80158762e-02,  -7.78449997e-02],\n       [ -1.90440357e-01,  -3.29971790e-01],\n       [  2.92200036e-02,   2.10727796e-01],\n       [ -2.43244916e-02,   1.55292386e-02],\n       [ -5.16466200e-02,   5.42694628e-02],\n       [  1.25557901e-02,  -2.48678982e-01],\n       [  1.67577974e-02,  -4.75739762e-02],\n       [  6.62565827e-02,  -1.30009586e-02],\n       [  7.25388378e-02,   8.36603940e-02],\n       [  2.38998041e-01,   3.05420756e-01],\n       [ -2.72035718e-01,   1.01458095e-02],\n       [  5.16153959e-05,  -2.44543044e-04],\n       [  1.03685357e-01,  -1.07225679e-01],\n       [  9.22114104e-02,   2.09622253e-02],\n       [  6.50322214e-02,   1.28133312e-01],\n       [  5.73192947e-02,   1.20278917e-01],\n       [  1.36882614e-03,  -1.42139569e-01],\n       [  2.77723640e-01,   1.16175748e-01],\n       [ -7.62082040e-02,  -2.35787913e-01],\n       [  1.48928780e-02,   3.79767455e-02],\n       [  7.22890273e-02,  -3.20174918e-02],\n       [  2.10749195e-03,  -8.05358216e-02],\n       [ -1.92757376e-04,   7.99187832e-03],\n       [ -6.54487754e-04,   2.43713763e-02],\n       [ -8.72114226e-02,   1.12240732e-01],\n       [  5.14724731e-01,  -2.16178805e-01],\n       [  4.63652276e-02,   1.20246477e-01],\n       [  1.43243028e-02,  -3.71997245e-03],\n       [ -4.67013083e-02,  -2.69958973e-02],\n       [  1.27207592e-01,   1.29338317e-02],\n       [ -1.13580130e-01,   1.18587770e-01],\n       [ -1.71329379e-02,   2.75359973e-02],\n       [ -1.80706233e-01,   6.67268261e-02],\n       [ -5.90457283e-02,  -3.98857333e-02],\n       [  1.54577680e-02,   1.47048039e-02],\n       [  6.55395910e-03,  -3.03674459e-01],\n       [  8.96144137e-02,  -9.77420658e-02],\n       [  3.99681590e-02,   8.26330110e-02],\n       [  5.26117496e-02,  -2.32404277e-01],\n       [ -5.14630266e-02,   7.43540153e-02],\n       [ -4.65831347e-02,   6.69970065e-02],\n       [ -9.82871577e-02,   1.36000067e-01],\n       [ -7.40878060e-02,   2.60614008e-01],\n       [  9.79042612e-04,   4.79047030e-01],\n       [  2.27894470e-01,   1.05697334e+00],\n       [ -9.74833786e-01,  -3.55433345e-01],\n       [ -2.47861713e-01,  -1.09781575e+00],\n       [ -1.56736100e+00,  -6.51972964e-02],\n       [ -1.13918900e+00,   1.96044505e-01],\n       [  4.07100707e-01,   9.06529427e-02],\n       [  9.62348223e-01,  -1.95724126e-02],\n       [  3.94356161e-01,  -7.31234491e-01],\n       [ -8.02220285e-01,   9.80203211e-01],\n       [ -7.67574668e-01,  -8.85727823e-01],\n       [  6.66188180e-01,   5.24807274e-01],\n       [ -8.98889422e-01,   5.38793027e-01],\n       [ -5.72967470e-01,  -5.11064529e-01],\n       [  7.91763008e-01,  -5.60305238e-01],\n       [ -8.35886896e-01,   2.20312998e-01],\n       [ -7.22148955e-01,  -3.42901200e-01],\n       [  1.18748522e+00,   1.83576152e-01],\n       [  8.35271254e-02,   8.96267712e-01],\n       [  6.96666121e-01,   1.03734744e+00],\n       [  3.48014355e-01,  -4.34512049e-01],\n       [  8.53452325e-01,   7.72126496e-01],\n       [ -3.61713052e-01,   6.44582331e-01],\n       [ -1.15523481e+00,   4.80857968e-01],\n       [  9.41389561e-01,  -4.08218175e-01],\n       [  5.25890946e-01,  -6.75654784e-02],\n       [  8.86028826e-01,  -3.51928085e-01],\n       [  2.52451181e-01,   7.48402119e-01],\n       [ -8.08308542e-01,   7.39613056e-01],\n       [ -1.07701910e+00,  -9.26389545e-02],\n       [ -3.13916594e-01,   9.06256676e-01],\n       [ -1.74387559e-01,   9.19762433e-01],\n       [ -6.55666828e-01,  -3.79410207e-01],\n       [ -1.20109844e+00,  -2.77895302e-01],\n       [  5.95114768e-01,   6.04840696e-01],\n       [ -6.03877842e-01,   4.30030406e-01],\n       [ -1.05012131e+00,  -2.82655716e-01],\n       [ -7.39097416e-01,   6.63190961e-01],\n       [ -1.34865105e+00,  -1.41755089e-01],\n       [  1.45457745e+00,   3.43298584e-01],\n       [ -1.04649615e+00,   3.82250190e-01],\n       [  7.19268858e-01,   7.34838903e-01],\n       [ -9.39966977e-01,   9.68990661e-03],\n       [  9.80615258e-01,   3.82151216e-01],\n       [  7.55260468e-01,   6.83156550e-01],\n       [  6.67494357e-01,  -9.96396899e-01],\n       [  4.89153266e-01,   5.84899448e-02],\n       [  1.41460940e-01,   1.12656808e+00],\n       [  2.53365517e-01,   1.13335299e+00],\n       [  8.81125689e-01,  -4.49109912e-01],\n       [ -2.56304622e-01,   1.08134913e+00],\n       [ -3.00738588e-02,   1.11482167e+00],\n       [ -2.07297415e-01,  -9.31622744e-01],\n       [ -8.21770728e-02,   9.49779153e-01],\n       [  2.60027528e-01,  -7.51967192e-01],\n       [  5.42457476e-02,  -1.26556480e+00],\n       [ -7.09604144e-01,   8.21489394e-02],\n       [ -1.06971848e+00,  -5.53193569e-01],\n       [  9.58473921e-01,   1.69049427e-01],\n       [  1.24820840e+00,  -5.60989566e-02],\n       [ -1.82413086e-01,  -1.04013276e+00],\n       [  7.69887090e-01,  -4.24548119e-01],\n       [  1.01528406e+00,  -9.91047621e-01],\n       [  8.38500679e-01,  -2.99814586e-02],\n       [  4.07544941e-01,  -6.49127781e-01],\n       [ -1.13413692e+00,   5.34506619e-01],\n       [  1.07544506e+00,  -7.07524776e-01],\n       [ -8.90223980e-01,   5.23129344e-01],\n       [  2.08509490e-01,  -8.79692376e-01],\n       [  1.71603873e-01,   8.92730594e-01],\n       [ -3.72143626e-01,  -7.48420715e-01],\n       [  1.30014253e+00,  -1.53062744e-02],\n       [  3.48146702e-03,   8.72940481e-01],\n       [ -1.06022155e+00,   3.69272918e-01],\n       [  3.25168744e-02,   9.26576495e-01],\n       [  2.08929792e-01,   9.35412765e-01],\n       [  1.59447655e-01,   1.07873082e+00],\n       [ -6.23537540e-01,   5.19931078e-01],\n       [ -2.65730411e-01,  -9.33165789e-01],\n       [  2.60391444e-01,   8.53203297e-01],\n       [ -5.02410293e-01,  -1.02733254e+00],\n       [ -3.20930600e-01,  -7.31494546e-01],\n       [  1.07270277e+00,   1.95665047e-01],\n       [ -1.00962973e+00,   6.31256044e-01],\n       [  3.06286335e-01,  -5.40573120e-01],\n       [ -5.60535312e-01,   8.91323864e-01],\n       [ -5.22129536e-01,   7.90984213e-01],\n       [ -3.99990886e-01,   5.78549147e-01],\n       [ -5.10643244e-01,   7.23788440e-01],\n       [  1.32826555e+00,  -8.19561630e-03],\n       [ -5.05309999e-01,   5.64786077e-01],\n       [  7.60645494e-02,   1.05300713e+00],\n       [  1.13004589e+00,  -3.19195032e-01],\n       [ -7.94690013e-01,  -3.70465368e-01],\n       [ -1.00708973e+00,   1.12104440e+00],\n       [ -5.55997752e-02,  -1.09344423e+00],\n       [ -2.44641036e-01,  -8.92304957e-01],\n       [ -9.40405786e-01,   1.00549960e+00],\n       [ -1.00281608e+00,  -4.60654199e-02],\n       [ -3.34825397e-01,  -5.93851626e-01],\n       [ -8.32324564e-01,  -8.97384048e-01]], dtype=float32)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = generateData(100,100)\n",
    "data_x1 = np.float32(data[\"x1\"])[:, np.newaxis]\n",
    "data_x2 = np.float32(data[\"x2\"])[:, np.newaxis]\n",
    "data_y = np.float32(data[\"y\"])[:, np.newaxis]\n",
    "data_test = np.hstack((data_x1, data_x2))\n",
    "data_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_layer(inputs, in_size, out_size, activation_function=None,):\n",
    "    # add one more layer and return the output of this layer\n",
    "    Weights = tf.Variable(tf.random_normal([in_size, out_size]))\n",
    "    biases = tf.Variable(tf.zeros([1, out_size]) + 0.1,)\n",
    "    Wx_plus_b = tf.matmul(inputs, Weights) + biases\n",
    "    if activation_function is None:\n",
    "        outputs = Wx_plus_b\n",
    "    else:\n",
    "        outputs = activation_function(Wx_plus_b,)\n",
    "    return outputs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "xs = tf.placeholder(tf.float32, [200, 2]) # 28x28\n",
    "ys = tf.placeholder(tf.float32, [200, 1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "l1 = add_layer(xs, 2, 10,  activation_function=tf.nn.relu)\n",
    "prediction = add_layer(l1, 10, 1,  activation_function=tf.nn.softmax)\n",
    "cross_entropy = tf.reduce_mean(-tf.reduce_sum(ys * tf.log(prediction),\n",
    "                                              reduction_indices=[1]))       # loss\n",
    "\n",
    "\n",
    "train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)\n",
    "sess = tf.Session()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "ename": "InvalidArgumentError",
     "evalue": "You must feed a value for placeholder tensor 'Placeholder_8' with dtype float and shape [200,2]\n\t [[Node: Placeholder_8 = Placeholder[dtype=DT_FLOAT, shape=[200,2], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nCaused by op 'Placeholder_8', defined at:\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py\", line 16, in <module>\n    app.launch_new_instance()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\traitlets\\config\\application.py\", line 658, in launch_instance\n    app.start()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tornado\\ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2698, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2802, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2862, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-21-516cf7e6633f>\", line 1, in <module>\n    xs = tf.placeholder(tf.float32, [200, 2]) # 28x28\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 1530, in placeholder\n    return gen_array_ops._placeholder(dtype=dtype, shape=shape, name=name)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 1954, in _placeholder\n    name=name)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2506, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1269, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder_8' with dtype float and shape [200,2]\n\t [[Node: Placeholder_8 = Placeholder[dtype=DT_FLOAT, shape=[200,2], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mInvalidArgumentError\u001b[0m                      Traceback (most recent call last)",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\u001b[0m in \u001b[0;36m_do_call\u001b[1;34m(self, fn, *args)\u001b[0m\n\u001b[0;32m   1138\u001b[0m     \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1139\u001b[1;33m       \u001b[1;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1140\u001b[0m     \u001b[1;32mexcept\u001b[0m \u001b[0merrors\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mOpError\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\u001b[0m in \u001b[0;36m_run_fn\u001b[1;34m(session, feed_dict, fetch_list, target_list, options, run_metadata)\u001b[0m\n\u001b[0;32m   1120\u001b[0m                                  \u001b[0mfeed_dict\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtarget_list\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1121\u001b[1;33m                                  status, run_metadata)\n\u001b[0m\u001b[0;32m   1122\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\contextlib.py\u001b[0m in \u001b[0;36m__exit__\u001b[1;34m(self, type, value, traceback)\u001b[0m\n\u001b[0;32m     88\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 89\u001b[1;33m                 \u001b[0mnext\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mgen\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     90\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\u001b[0m in \u001b[0;36mraise_exception_on_not_ok_status\u001b[1;34m()\u001b[0m\n\u001b[0;32m    465\u001b[0m           \u001b[0mcompat\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mas_text\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpywrap_tensorflow\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mTF_Message\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mstatus\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 466\u001b[1;33m           pywrap_tensorflow.TF_GetCode(status))\n\u001b[0m\u001b[0;32m    467\u001b[0m   \u001b[1;32mfinally\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mInvalidArgumentError\u001b[0m: You must feed a value for placeholder tensor 'Placeholder_8' with dtype float and shape [200,2]\n\t [[Node: Placeholder_8 = Placeholder[dtype=DT_FLOAT, shape=[200,2], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mInvalidArgumentError\u001b[0m                      Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-23-e1356c432c45>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      6\u001b[0m     \u001b[0msess\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtrain_step\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m{\u001b[0m\u001b[0mxs\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mdata_test\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mys\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mdata_y\u001b[0m\u001b[1;33m}\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      7\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mi\u001b[0m \u001b[1;33m%\u001b[0m \u001b[1;36m50\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;36m0\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 8\u001b[1;33m         \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0msess\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcross_entropy\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\u001b[0m in \u001b[0;36mrun\u001b[1;34m(self, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[0;32m    787\u001b[0m     \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    788\u001b[0m       result = self._run(None, fetches, feed_dict, options_ptr,\n\u001b[1;32m--> 789\u001b[1;33m                          run_metadata_ptr)\n\u001b[0m\u001b[0;32m    790\u001b[0m       \u001b[1;32mif\u001b[0m \u001b[0mrun_metadata\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    791\u001b[0m         \u001b[0mproto_data\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtf_session\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mTF_GetBuffer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrun_metadata_ptr\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\u001b[0m in \u001b[0;36m_run\u001b[1;34m(self, handle, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[0;32m    995\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mfinal_fetches\u001b[0m \u001b[1;32mor\u001b[0m \u001b[0mfinal_targets\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    996\u001b[0m       results = self._do_run(handle, final_targets, final_fetches,\n\u001b[1;32m--> 997\u001b[1;33m                              feed_dict_string, options, run_metadata)\n\u001b[0m\u001b[0;32m    998\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    999\u001b[0m       \u001b[0mresults\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\u001b[0m in \u001b[0;36m_do_run\u001b[1;34m(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\u001b[0m\n\u001b[0;32m   1130\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mhandle\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1131\u001b[0m       return self._do_call(_run_fn, self._session, feed_dict, fetch_list,\n\u001b[1;32m-> 1132\u001b[1;33m                            target_list, options, run_metadata)\n\u001b[0m\u001b[0;32m   1133\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1134\u001b[0m       return self._do_call(_prun_fn, self._session, handle, feed_dict,\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\u001b[0m in \u001b[0;36m_do_call\u001b[1;34m(self, fn, *args)\u001b[0m\n\u001b[0;32m   1150\u001b[0m         \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1151\u001b[0m           \u001b[1;32mpass\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1152\u001b[1;33m       \u001b[1;32mraise\u001b[0m \u001b[0mtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0me\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mnode_def\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mop\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmessage\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1153\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1154\u001b[0m   \u001b[1;32mdef\u001b[0m \u001b[0m_extend_graph\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mInvalidArgumentError\u001b[0m: You must feed a value for placeholder tensor 'Placeholder_8' with dtype float and shape [200,2]\n\t [[Node: Placeholder_8 = Placeholder[dtype=DT_FLOAT, shape=[200,2], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nCaused by op 'Placeholder_8', defined at:\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py\", line 16, in <module>\n    app.launch_new_instance()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\traitlets\\config\\application.py\", line 658, in launch_instance\n    app.start()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tornado\\ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\ipykernel\\zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2698, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2802, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2862, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-21-516cf7e6633f>\", line 1, in <module>\n    xs = tf.placeholder(tf.float32, [200, 2]) # 28x28\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 1530, in placeholder\n    return gen_array_ops._placeholder(dtype=dtype, shape=shape, name=name)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 1954, in _placeholder\n    name=name)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2506, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"C:\\Users\\HP\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1269, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder_8' with dtype float and shape [200,2]\n\t [[Node: Placeholder_8 = Placeholder[dtype=DT_FLOAT, shape=[200,2], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n"
     ],
     "output_type": "error"
    }
   ],
   "source": [
    "init = tf.global_variables_initializer()\n",
    "sess.run(init)\n",
    "\n",
    "for i in range(1000):\n",
    "    \n",
    "    sess.run(train_step, feed_dict={xs: data_test, ys: data_y})\n",
    "    if i % 50 == 0:\n",
    "        print(sess.run(cross_entropy))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(200, 2)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(data_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 0
}
