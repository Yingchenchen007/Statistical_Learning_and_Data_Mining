library(keras)
install_tensorflow
install.packages("devtools")
devtools::install_github("rstudio/keras")
library(keras)
install_tensorflow(gpu=TRUE)
library(keras)
install_tensorflow(gpu=TRUE)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
# reshape
dim(x_train) <- c(nrow(x_train), 784)
dim(x_test) <- c(nrow(x_test), 784)
# rescale
x_train <- x_train / 255
x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(model)
install_keras(keras,method = "conda")
install_keras(keras,method = "conda")
install_keras(keras,method = "conda")
install_keras(keras)
library(keras)
install_keras(keras,method = "conda")
install.packages("keras")
library(keras)
install_keras
install_keras(method = c("virtualenv", "conda"), conda = "auto", tensorflow = "default", extra_packages = NULL)
install.packages("keras")
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
# reshape
dim(x_train) <- c(nrow(x_train), 784)
dim(x_test) <- c(nrow(x_test), 784)
# rescale
x_train <- x_train / 255
x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(model)
library(keras)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
# reshape
dim(x_train) <- c(nrow(x_train), 784)
dim(x_test) <- c(nrow(x_test), 784)
# rescale
x_train <- x_train / 255
x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(model)
install_keras(method = c("virtualenv", "conda"), conda = "auto", tensorflow = "default", extra_packages = NULL)
remove.packages("keras")
install_keras
install_keras(method = c("virtualenv", "conda"), conda = "auto", tensorflow = "default", extra_packages = NULL)
install_keras
library(keras)
install_keras(method = c("virtualenv", "conda"), conda = "auto", tensorflow = "default", extra_packages = NULL)
install.packages("keras") library(keras) install_keras
install_keras(method = c("virtualenv", "conda"), conda = "auto", tensorflow = "default", extra_packages = NULL)
install.packages("keras")
library(keras)
install_keras
install_keras(method = c("virtualenv", "conda"), conda = "auto", tensorflow = "default", extra_packages = NULL)
install_keras
install_keras(method = c("virtualenv", "conda"), conda = "auto", tensorflow = "default", extra_packages = NULL)
install_keras(method =  "conda", conda = "auto", tensorflow = "default", extra_packages = NULL)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
# reshape
dim(x_train) <- c(nrow(x_train), 784)
dim(x_test) <- c(nrow(x_test), 784)
# rescale
x_train <- x_train / 255
x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(model)
library(ggplot2)
total <- apply(LOS[4:6],1,sum)
LOS <- read.csv("D:/statisic/Statistical_Consulting/01_Length of Hospital Stay (LOS).csv")
head(LOS)
library(ggplot2)
total <- apply(LOS[4:6],1,sum)
graph.treatment <- cbind(rep(LOS$ID,3),c(LOS$PT,LOS$OT*2,LOS$ST*3),rep(total,3))
colnames(graph.treatment) <- c("x","y","total")
graph.treatment.df <- as.data.frame(graph.treatment)
graph.treatment.df <- subset(graph.treatment.df,total <= 2,total >0)
ggplot(graph.treatment.df, aes(x=x, y=y, colour=as.factor(total), shape = as.factor(total))) +
geom_point(size=2, alpha=0.6) +
ylim(0.5,3.2)
graph.treatment
graph.treatment.df
library(ggplot2)
total <- apply(LOS[4:6],1,sum)
graph.treatment <- cbind(rep(LOS$ID,3),c(LOS$PT,LOS$OT*2,LOS$ST*3),rep(total,3))
colnames(graph.treatment) <- c("x","y","total")
graph.treatment.df <- as.data.frame(graph.treatment)
graph.treatment.df <- subset(graph.treatment.df,total <= 2)
graph.treatment.df <- subset(graph.treatment.df,total > 0)
ggplot(graph.treatment.df, aes(x=x, y=y, colour=as.factor(total), shape = as.factor(total))) +
geom_point(size=2, alpha=0.6) +
ylim(0.5,3.2)
library(ggplot2)
total <- apply(LOS[4:6],1,sum)
graph.treatment <- cbind(rep(LOS$ID,3),c(LOS$PT,LOS$OT*2,LOS$ST*3),rep(total,3))
colnames(graph.treatment) <- c("x","y","total")
graph.treatment.df <- as.data.frame(graph.treatment)
graph.treatment.df <- subset(graph.treatment.df,total <= 2)
graph.treatment.df <- subset(graph.treatment.df,total > 0)
ggplot(graph.treatment.df, aes(x=x, y=y, colour=as.factor(total), shape = as.factor(total))) +
geom_point(size=2, alpha=0.6) +
ylim(0,3.2)
graph.treatment.df
library(ggplot2)
total <- apply(LOS[4:6],1,sum)
graph.treatment <- cbind(rep(LOS$ID,3),c(LOS$PT,LOS$OT*2,LOS$ST*3),rep(total,3))
colnames(graph.treatment) <- c("x","y","total")
graph.treatment.df <- as.data.frame(graph.treatment)
graph.treatment.df <- subset(graph.treatment.df,total <= 2)
graph.treatment.df <- subset(graph.treatment.df,total > 0)
ggplot(graph.treatment.df, aes(x=x, y=y, colour=as.factor(total), shape = as.factor(total))) +
geom_point(size=2, alpha=0.6) +
ylim(0.5,3.2)
LOS$in_date
test <- LOS$in_date
test <- LOS$in_date
test <- gsub("/",replacement="-",test)
test
as.Date(test)
los <- as.Date(in.date) -  as.Date(out.date)
in.date <- LOS$in_date
in.date <- gsub("/",replacement="-",in.date)
out.date <- LOS$out_date
out.date <- gsub("/",replacement="-",out.date)
los <- as.Date(in.date) -  as.Date(out.date)
los
los <- as.Date(out.date) - as.Date(in.date)
los
as.Date(out.date)
as.Date(in.date)
los
LOS$ht
LOS$dm
LOS$FIM_F - LOS$FIM_S
LOS$FIM_S - LOS$FIM_F
FIM.dif <- LOS$FIM_S - LOS$FIM_F
BAR.dif <- LOS$BAR_S - LOS$BAR_F
cor(FIM.dif,los)
FIM.dif
typeof(FIM.dif)
typeof(los)
cor(FIM.dif,los)
?cor
cor(FIM.dif,as.numeric(los))
as.numeric(los)
in.date <- LOS$in_date
in.date <- gsub("/",replacement="-",in.date)
out.date <- LOS$out_date
out.date <- gsub("/",replacement="-",out.date)
los <- as.numeric(as.Date(out.date) - as.Date(in.date))
cor(FIM.dif,los)
cor(BAR.dif,los)
cor(LOS$FIM_F,los)
LOS$FIM_F
cor(LOS$FIM_F,los)
cor(LOS$FIM_S,los)
cor(LOS$BAR_F,los)
cor(LOS$BAR_S,los)
cor(FIM.dif,los)
cor(BAR.dif,los)
cor(LOS$FIM_F,los)
cor(LOS$FIM_S,los)
cor(LOS$BAR_F,los)
cor(LOS$BAR_S,los)
